# To scan for security issues
name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
    snyk-sca:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v3
        - name: Build a Docker image
          run: docker build -t your/image-to-test .
        - name: Run Snyk to check Docker image for vulnerabilities
          # Snyk can be used to break the build when it detects vulnerabilities.
          # In this case we want to upload the issues to GitHub Code Scanning
          continue-on-error: true
          uses: snyk/actions/docker@master
          env:
            # In order to use the Snyk Action you will need to have a Snyk API token.
            # See https://docs.snyk.io/integrations/ci-cd-integrations/github-actions-integration#getting-your-snyk-token
            # or you can sign up for free at https://snyk.io/login
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          with:
            image: seanglencrossitas/itas276-lab4:latest
            args: --file=Dockerfile

        - name: save report as pipeline artifact
          uses: actions/upload-artifact@v3
          with:
            name: snyk-sca.sarif
            path: snyk-sca.sarif

    snyk-iac:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v3
        - name: Build a Docker image
          run: docker build -t your/image-to-test .
        - name: Run Snyk to check Docker image for vulnerabilities
          # Snyk can be used to break the build when it detects vulnerabilities.
          # In this case we want to upload the issues to GitHub Code Scanning
          continue-on-error: true
          uses: snyk/actions/iac@master
          env:            # In order to use the Snyk Action you will need to have a Snyk API token.
            # See https://docs.snyk.io/integrations/ci-cd-integrations/github-actions-integration#getting-your-snyk-token
            # or you can sign up for free at https://snyk.io/login
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

        - name: save report as pipeline artifact
          uses: actions/upload-artifact@v3
          with:
            name: snyk-iac.sarif
            path: snyk-iac.sarif

    semgrep-full:
        runs-on: ubuntu-latest
        container:
            image: returntocorp/semgrep

        steps:   
            # step 1
            - 
                name: clone application source code
                uses: actions/checkout@v3

            # step 2
            - 
                name: full semgrep scan
                run: |
                    semgrep \
                    --sarif --output report.sarif \
                    --metrics=off \
                    --config="p/default"
    
            # step 3
            
            - 
                name: save report as pipeline artifact
                uses: actions/upload-artifact@v3
                with:
                    name: report.sarif
                    path: report.sarif
                
            # step 4
            - 
                name: Download report
                uses: actions/download-artifact@v2
                with: 
                    name: report.sarif
    